@model InventroyManagement.DTOs.ProductDTO
@using InventroyManagement.Helpers;
@using InventroyManagement.DTOs

<h2>Create New Product</h2>

@using (Html.BeginForm("Create", "Product", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description)
        @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price)
        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", type = "number", step = "0.01" })
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockQuantity)
        @Html.TextBoxFor(model => model.StockQuantity, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Category)
        <select class="form-control" name="Category">
            @foreach (ProductCategory category in Enum.GetValues(typeof(ProductCategory)))
            {
                <option value="@category">
                    EnumHelper.GetDescription(category)
                </option>
            }
        </select>
        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
    </div>

    <input type="submit" value="Create" class="btn btn-primary" />
}
