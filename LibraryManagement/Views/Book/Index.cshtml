@model IEnumerable<LibraryManagement.DTOs.BookDTO>

@{
    ViewBag.Title = "Book List";
}

@{
    var user = Session["User"] as LibraryManagement.DTOs.UserDTO; // Retrieve user info from session
    var isLoggedIn = user != null; // Check if a user is logged in
}

<div class="page-header">
    <div class="container">
        <div class="row p-b-lg">
            <div class="col-md-19">
                <h1>Book List</h1> <!--TODO: Update Title Here-->
                <p class="color-type-secondary">View all the books</p> <!--TODO: Update Subtitle Here-->
            </div>
            <div class="col-md-5">
                <a href="@Url.Action("Create")" class="btn btn-primary p-xs m-t-lg">
                    <i class="glyph glyph-add m-r-xxxs p-b-xxxs"></i> Create New book
                </a> <!--TODO: Update Link Text-->
            </div>
        </div>
    </div>
</div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade in" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">
                <i class="glyph glyph-cancel"></i>
            </span>
        </button>
        <div class="row">
            <div class="col-md-20">
                <p><i class="glyph glyph-info"></i> @TempData["Success"]</p>
            </div>
        </div>
    </div>
}

<div id="dynamicAlert" class="alert alert-dismissible fade in" role="alert" style="display:none;">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">
            <i class="glyph glyph-cancel"></i>
        </span>
    </button>
    <div class="row">
        <div class="col-md-20">
            <p id="dynamicAlertMessage"></p>
        </div>
    </div>
</div>


<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Book ID</th>
                <th>Title</th>
                <th>Author</th>
                <th>ISBN</th>
                <th>Publication Year</th>
                <th>Copies Available</th>
                <th>Actions</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="col-xs-2">@Html.DisplayFor(modelItem => item.BookId)</td>
                    <td class="col-xs-6">@Html.DisplayFor(modelItem => item.Title)</td>
                    <td class="col-xs-2">@Html.DisplayFor(modelItem => item.Author)</td>
                    <td class="col-xs-2">@Html.DisplayFor(modelItem => item.ISBN)</td>
                    <td class="col-xs-2">@Html.DisplayFor(modelItem => item.PublicationYear)</td>
                    <td class="col-xs-2">@Html.DisplayFor(modelItem => item.CopiesAvailable)</td>
                    <td class="col-xs-7">
                        @if (!isLoggedIn)
                        {
                        }
                        else
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.BookId }, new { @class = "btn btn-secondary" })
                            @Html.AntiForgeryToken()
                            <button class="btn btn-danger delete-btn"
                                    data-id="@item.BookId"
                                    data-name="@item.Title"
                                    data-year="@item.PublicationYear"
                                    data-author="@item.Author"
                                    data-toggle="modal"
                                    data-target="#deleteModal">
                                Delete
                            </button>
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade modal-center-vertical" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="deleteModalLabel">Confirm Deletion</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the book <strong id="BookName"></strong>?</p>
                <p>
                    Publication Year : <strong id="year"></strong> <br />
                    Author : <strong id="author"></strong>
                </p>
                <p class="color-type-alert">This action is irreversible.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            var bookId = 0;

            // Handle delete button click to open the modal
            $(".delete-btn").on("click", function () {
                bookId = $(this).data("id"); // Get the  ID from the button
                var bookName = $(this).data("name"); // Get the  name from the button
                var year = $(this).data("year");
                var author = $(this).data("author");
                $("#bookName").text(bookName); // Set the  name in the modal
                $("#year").text(year);
                $("#author").text(author);
            });

            // Handle confirm delete button click
            $("#confirmDelete").on("click", function () {
                var csrfToken = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: '/Book/Delete',
                    type: 'POST',
                    data: {
                        id: bookId,
                        __RequestVerificationToken: csrfToken
                    },
                    success: function (response) {
                        if (response.success) {
                            // Close the modal
                            $("#deleteModal").modal("hide");

                            // Remove the row from the table
                            $("button[data-id='" + bookId + "']").closest("tr").fadeOut('slow', function () {
                                $(this).remove();
                            });

                            // Show success alert
                            showAlert("success", "Book deleted successfully.");
                        } else {
                            // Close the modal
                            $("#deleteModal").modal("hide");
                            // Show error alert
                            showAlert("danger", response.error || "An error occurred on the server.");
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.error("AJAX Error:", textStatus, errorThrown);
                        showAlert("danger", "AJAX call failed: " + textStatus);
                    }
                });
            });

            // Function to show alert dynamically
            function showAlert(type, message) {
                var alertClass = type === "success" ? "alert-success" : "alert-danger";
                var alertContainer = $("#dynamicAlert");

                // Update alert message and class
                alertContainer
                    .removeClass("alert-success alert-danger")
                    .addClass(alertClass)
                    .fadeIn();
                $("#dynamicAlertMessage").html("<i class='glyph glyph-info'></i>" + message);

                // Auto-hide after 5 seconds
                setTimeout(function () {
                    alertContainer.fadeOut();
                }, 5000);
            }
        });
    </script>
}